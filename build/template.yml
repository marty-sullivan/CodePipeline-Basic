AWSTemplateFormatVersion: '2010-09-09'
# Transform: 'AWS::Serverless-2016-10-31'
Description: ''

Parameters:

  Application:
    Description: 'Name of the application for billing'
    Type: 'String'
  
  Environment:
    Description: 'Name of the deployment environment'
    Type: 'String'
    
  GitHubRepository:
    Description: 'The GitHub repository owner/name for this application'
    Type: 'String'
  
  GitHubSourceVersion:
    Default: 'initializing'
    Description: 'The source version to use for version-specific items, e.g. container tags'
    Type: 'String'
  
  AlertEmail:
    Description: 'Email to which administrative alerts are sent'
    Type: 'String'
  
  AlertPhone:
    Description: 'Phone number to which administrative alerts are sent via SMS'
    Type: 'String'
    
Conditions:
  
  IsNotInitializing: !Not
    - !Equals
      - !Sub '${GitHubSourceVersion}'
      - 'initializing'

# Globals:
  
#   Function:
#     MemorySize: 1792
#     Timeout: 30
#     Tags:
#       Application: !Sub '${Application}'
#       Environment: !Sub '${Environment}'
#     Environment:
#       Variables:
#         APPLICATION: !Sub '${Application}'
#         ENVIRONMENT: !Sub '${Environment}'
#         AWS_ACCOUNT_ID: !Sub '${AWS::AccountId}'
        
Resources:

  # Build Pipeline
  
  BuildBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${Application}-${Environment}-${AWS::AccountId}-${AWS::Region}-build'
      # LifecycleConfiguration:
      #   Rules:
      #     - Id: 'daily-cleanup'
      #       Status: 'Enabled'
      #       AbortIncompleteMultipartUpload:
      #         DaysAfterInitiation: 1
      #       ExpirationInDays: 1
      #       NoncurrentVersionExpirationInDays: 1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      Tags:
        - Key: 'Application'
          Value: !Sub '${Application}'
        - Key: 'Environment'
          Value: !Sub '${Environment}'
        - Key: 'Resource'
          Value: !Sub 'build-bucket'

  CloudFormationBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${Application}-${Environment}-codebuild-cloudformation'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action: 'sts:AssumeRole'
            Principal:
              Service: 
                - !Sub 'codebuild.${AWS::URLSuffix}'
      Policies:
        - PolicyName: 'cloudformation-build'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'cloudformation:DescribeStacks'
                Resource:
                  - !Sub '${AWS::StackId}'
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Application}-${Environment}-cloudformation*'
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource:
                  - !Sub '${BuildBucket.Arn}/*'
      Tags:
        - Key: 'Application'
          Value: !Sub '${Application}'
        - Key: 'Environment'
          Value: !Sub '${Environment}'
        - Key: 'Resource'
          Value: !Sub 'cloudformation-build-role'
  
  CloudFormationBuildLogs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/codebuild/${CloudFormationBuildProject}'
      
  CloudFormationBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${Application}-${Environment}-cloudformation'
      TimeoutInMinutes: 15
      Artifacts:
        Type: 'CODEPIPELINE'
      Cache:
        Type: 'NO_CACHE'
      ServiceRole: !Sub '${CloudFormationBuildRole.Arn}'
      Source:
        Type: 'CODEPIPELINE'
        BuildSpec: 'build/buildspec_cfn.yml'
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        Type: 'LINUX_CONTAINER'
        EnvironmentVariables:
          - Name: 'APPLICATION'
            Value: !Sub '${Application}'
          - Name: 'ENVIRONMENT'
            Value: !Sub '${Environment}'
          - Name: 'GITHUB_REPOSITORY'
            Value: !Sub '${GitHubRepository}'
          - Name: 'ALERT_EMAIL'
            Value: !Sub '${AlertEmail}'
          - Name: 'ALERT_PHONE'
            Value: !Sub '${AlertPhone}'
          - Name: 'BUILD_BUCKET'
            Value: !Sub '${BuildBucket}'
      Tags:
        - Key: 'Application'
          Value: !Sub '${Application}'
        - Key: 'Environment'
          Value: !Sub '${Environment}'
        - Key: 'Resource'
          Value: !Sub 'cloudformation-build-project'

  CloudFormationDeployRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${Application}-${Environment}-cloudformation-deploy'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action: 'sts:AssumeRole'
            Principal:
              Service: 
                - !Sub 'cloudformation.${AWS::URLSuffix}'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess'
      Tags:
        - Key: 'Application'
          Value: !Sub '${Application}'
        - Key: 'Environment'
          Value: !Sub '${Environment}'
        - Key: 'Resource'
          Value: !Sub 'cloudformation-deploy-role'
  
  BuildPipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${Application}-${Environment}-codepipeline'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action: 'sts:AssumeRole'
            Principal:
              Service: 
                - !Sub 'codepipeline.${AWS::URLSuffix}'
      Policies:
        - PolicyName: 'codepipeline'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'cloudformation:*'
                Resource:
                  - '*'
              - Effect: 'Allow'
                Action:
                  - 'codebuild:*Build*'
                Resource:
                  - !Sub '${CloudFormationBuildProject.Arn}'
              - Effect: 'Allow'
                Action:
                  - 'codestar-connections:UseConnection'
                Resource:
                  - '{{resolve:ssm:/GitHubConnectionArn/cornell-cloud-devops:1}}'
              - Effect: 'Allow'
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !Sub '${CloudFormationDeployRole.Arn}'
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject*'
                  - 's3:GetReplicationConfiguration'
                  - 's3:ListBucket'
                  - 's3:PutObject*'
                  - 's3:Replicate*'
                Resource:
                  - !Sub '${BuildBucket.Arn}'
                  - !Sub '${BuildBucket.Arn}/*'
      Tags:
        - Key: 'Application'
          Value: !Sub '${Application}'
        - Key: 'Environment'
          Value: !Sub '${Environment}'
        - Key: 'Resource'
          Value: !Sub 'build-pipeline-role'
  
  BuildPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Sub '${Application}-${Environment}'
      ArtifactStores:
        - Region: !Sub '${AWS::Region}'
          ArtifactStore:
            Location: !Sub '${BuildBucket}'
            Type: 'S3'
      RestartExecutionOnUpdate: true
      RoleArn: !Sub '${BuildPipelineRole.Arn}'
      Stages:
        - Name: 'Source'
          Actions:
            - Name: 'SourceAction'
              OutputArtifacts:
                - Name: 'SourceArtifact'
              ActionTypeId: 
                Category: 'Source'
                Owner: 'AWS'
                Provider: 'CodeStarSourceConnection'
                Version: '1'
              Configuration:
                ConnectionArn: '{{resolve:ssm:/GitHubConnectionArn/cornell-cloud-devops}}'
                BranchName: !Sub '${Environment}'
                FullRepositoryId: !Sub '${GitHubRepository}'
                OutputArtifactFormat: 'CODE_ZIP'
                DetectChanges: 'true'
        - Name: 'Build'
          Actions:
            - Name: 'CloudFormationBuildAction'
              InputArtifacts:
                - Name: 'SourceArtifact'
              OutputArtifacts:
                - Name: 'CloudFormationArtifact'
                # - Name: 'ProductArtifact'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Provider: 'CodeBuild'
                Version: '1'
              Configuration:
                ProjectName: !Sub '${CloudFormationBuildProject}'
                PrimarySource: 'SourceArtifact'
        - Name: 'CloudFormationDeploy'
          Actions:
            - Name: 'CloudFormationDeployAction'
              InputArtifacts:
                - Name: 'CloudFormationArtifact'
              ActionTypeId:
                Category: 'Deploy'
                Owner: 'AWS'
                Provider: 'CloudFormation'
                Version: '1'
              Configuration:
                ActionMode: 'CREATE_UPDATE'
                StackName: !Sub '${Application}-${Environment}'
                Capabilities: 'CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND'
                RoleArn: !Sub '${CloudFormationDeployRole.Arn}'
                TemplatePath: 'CloudFormationArtifact::build/template_packaged.yml'
                TemplateConfiguration: 'CloudFormationArtifact::build/cfn_configuration.json'
      Tags:
        - Key: 'Application'
          Value: !Sub '${Application}'
        - Key: 'Environment'
          Value: !Sub '${Environment}'
        - Key: 'Resource'
          Value: !Sub 'build-pipeline'
